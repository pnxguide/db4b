#include "converter.h"
#include <cctype>
#include <map>

std::string braille_to_eng(std::string before) {
    // Create dictionary
    std::map<std::string, char> dict = {
        {"\u2800", ' '}, {"\u2801", 'A'}, {"\u2802", '1'}, {"\u2803", 'B'},
        {"\u2804", '\''}, {"\u2805", 'K'}, {"\u2806", '2'}, {"\u2807", 'L'},
        {"\u2808", '@'}, {"\u2809", 'C'}, {"\u2810", 'I'}, {"\u2811", 'F'},
        {"\u2812", '/'}, {"\u2813", 'M'}, {"\u2814", 'S'}, {"\u2815", 'P'},
        {"\u2816", '"'}, {"\u2817", 'E'}, {"\u2818", '3'}, {"\u2819", 'H'},
        {"\u2820", '9'}, {"\u2821", 'O'}, {"\u2822", '6'}, {"\u2823", 'R'},
        {"\u2824", '^'}, {"\u2825", 'D'}, {"\u2826", 'J'}, {"\u2827", 'G'},
        {"\u2828", '>'}, {"\u2829", 'N'}, {"\u2830", 'T'}, {"\u2831", 'Q'},
        {"\u2832", ','}, {"\u2833", '*'}, {"\u2834", '5'}, {"\u2835", '<'},
        {"\u2836", '-'}, {"\u2837", 'U'}, {"\u2838", '8'}, {"\u2839", 'V'},
        {"\u2840", '.'}, {"\u2841", '%'}, {"\u2842", '['}, {"\u2843", '$'},
        {"\u2844", '+'}, {"\u2845", 'X'}, {"\u2846", '!'}, {"\u2847", '&'},
        {"\u2848", ';'}, {"\u2849", ':'}, {"\u2850", '4'}, {"\u2851", '\\'},
        {"\u2852", '0'}, {"\u2853", 'Z'}, {"\u2854", '7'}, {"\u2855", '('},
        {"\u2856", '_'}, {"\u2857", '?'}, {"\u2858", 'W'}, {"\u2859", ']'},
        {"\u2860", '#'}, {"\u2861", 'Y'}, {"\u2862", ')'}, {"\u2863", '='}
    };
    // Convert to English
    std::string after = "";
    for (int i = 0; i < before.length(); i += 3) {
        std::string braille_char = before.substr(i, 3);
        if (dict.find(braille_char) != dict.end()) {
            after += dict[braille_char];
        } else {
            after += braille_char;
        }
    }
    // Return
    return after;
}